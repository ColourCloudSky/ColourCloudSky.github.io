---
layout:     post
title:      "设计师到底需不需要会代码吗？"
subtitle:   "To code, or not to code?"
#date:       2018-05-14 17:07:00
author:     "Caiyunsky"
header-mask: 0.3
header-img: "img/article-img/20180514/post-bg-banner.jpg"
catalog:    true
tags:
    - 设计译文
    
---

> 全文共3917词，阅读大约需要10分钟
>
> 文章简介： 深入探讨设计师是否需要会代码

![image1](/img/article-img/20180514/image1.png)

设计师到底需不需要会代码，这个话题经常被大家讨论到。作为计算机专业出身的我而言，懂得一些代码基础给我的工作带来的好处是非常多的。接下来就谈谈我对这个问题的一些看法，不一定对，有说错的地方还望各位多多指教。

首先，看待一个设计，不仅仅只是视觉稿，更是看到一个落地的产品，知道这个产品是如何做出来的。设计是创意到执行的过程，也是视觉思维到产品思维的演化。我今天做的设计，如何优化能更好的对接开发去做执行，我做的一套很好的架构，将来开发能够做更好的适配。如果今天做的设计是站在帮助别人解决问题的基础上，那么我认为这个设计会非常的优秀。

视觉设计只是产品设计中的一环，纵向培养系统性设计思维，横向培养产品体验思维。在早先的一些设计师，会自己去做一些自己的个人网站，从设计到开发都自己做，那么他们会学到一整套产品的设计流程，这个是比现在把工作拆的很散的视觉设计，交互设计，动效设计要思考的更多。

设计的本质是解决问题，而解决问题的核心是建立在设计师对产品和业务极其理解的基础上才成立的。

其次，懂得一些代码知识，能拓展自己的眼界，突破自身的限制，会知道更多实现的可能性。

再次，代码的学习会锻炼你的逻辑思维能力，与开发的对接能力，能够提升团队的工作效率。

据我与国外设计师的交流和看国外设计师招聘要求的过程中，会发现在国外，单纯的视觉设计师其实是不多的。更多的可能是设计懂开发，开发也了解设计，大家都相互协作，合作会更加高效。这与现在国内某些公司提出的全链路设计师的观点是不谋而合的。其实就我自己的观点来看，从目前国外的工作状况是能够看到国内未来的发展趋势的，毕竟我们现在经历的很可能就是他们曾经都走过的路。

个人觉得，只要你有精力，并且有兴趣，真的应该去了解下代码知识，它很可能会让你进入一个完全不一样的世界。

好了，话不多说，以下是译文：

我回顾自己的设计生涯，试图找到这个问题的答案。

我知道过去已经有很多关于这方面的文章，而且很可能在未来这类文章也还会出现。我的目的不是想笼统的给出一个标准答案，相反，我是想通过分享一些我自己职业生涯中的经历，可能与代码相关，但其实最终我希望能为大家提供一种思路，关于这个问题的答案。

在正文开始之前先介绍下自己的背景。我确实了解一些HTML、CSS和ActionScript (RIP Flash)和基础一点的JavaScript。我也学会了用自己的方法写出了一个非常简单的游戏。但是，如果你问我是否懂得开发，在这一点上，我的答案是——我不会。我所懂得的只是一些非常基本的理解，知道一些事情是如何实现的，并且如果需要的话，我也可以靠自己拼凑出一些东西(只要允许我用网络)。

有了以上这些背景介绍，接下来就进入我的回忆之旅吧。

### 回头看

2003年，我正式开始了我的设计之旅。我在10至12年级的这段时间就读于一个中等专科学校学习平面造型设计，在那里我学习了平面设计课程。在这3年间，我学到了很多东西，比如排版、色彩、构图、品牌、摄影、印刷，还有很多与平面设计相关的东西，但是代码并不是其中之一。现在我觉得有点遗憾，让我告诉你为什么。

从学校毕业后，17岁的我在一家小型出版公司找到了工作。我是公司唯一的设计师，我做的每件事都是我在学校里学到的，公司的品牌设计和杂志设计，杂志的编辑设计，杂志广告的品牌/广告设计，还有…网页设计。

回想起来,这是我职业生涯中第一次接触代码，懂一些代码会很棒,尤其是知道现在有些事情实现起来可以很简单,遗憾的是我不知道这个事实，我在那个时候对学习代码是抵触的，觉得那对自己没有啥帮助。在那个时候，我想专注于我所认为的“真正的设计技巧”。我记得，那是2006年，当时的互联网不像今天这样发达(我的英文也不大好)，所以我没法从网上自学，不幸的是我还是公司唯一的设计师，这意味着我不能指望其他来帮助我。

尽管如此，我还是成功地在网上建立了一个网站，尽管它没有做得很好。我弄明白了Dreamweaver上的表格和超链接是如何工作的，我把一些东西拼凑在一起。最终结果是一个带有大量图片的HTML表格(这是网站的内容)，然后我做了一些超链接，跳转到其他页面…基本上一个合格的网页设计师肯定会认为这是一种犯罪。CSS?我甚至不知道那是什么。

我认为当时的主要斗争是我对学习代码的抵触。因为我对它一无所知，所以我认为它比实际情况要复杂得多，因此我一直在努力寻找解决它的方法。

一年后，我觉得我需要学习更多，因此我决定上大学。3年之后，我成为了一个更好的设计师(如果我可以这么说的话)，我的技能提高了，但是我仍然对代码一无所知，依然感到遗憾。

这次，不是因为我们没有课程来学习basics语言，我们有一个，问题是老师几乎没打算教我们任何东西。可能是因为她觉得平面设计的学生对这个课程不感兴趣，这在一定程度上是对的。我们确实抱怨老师，但我们哪儿也去不了。尽管我想学，但我有很多其他的项目在进行，同时也在一家小型广告公司全职工作，所以，和我的大多数同学一样，我只能把注意力集中在其他项目上，把代码学习丢到了一边。

责任推给老师很容易，但回想起来，我真的很后悔没有花时间去学习basics语言，即使我真的有太多自己的事要做。这将会为我节省不少时间和规避不少挫折。

毕业后，我决定开始做一名自由职业者。猜猜我经常收到哪些类型的工作?*网页设计*。然而，这次我有了一张王牌在手。我在平面设计中学会了Flash，我对它很熟悉，这就是我制作网站的方式。这是一种技巧，但它不是最有效的工具，每个网站的任何更改或添加都会花费我很多时间和耐心。

转眼到了2012年，我不再设计网站了，我充分利用了我在Flash中学到的所有知识，在葡萄牙一家大型出版公司的多媒体部门制作互动资源。与此同时，我开始参加我的插图和动画硕士学位课程，其中一个实际上是编程。老实说，我从来都不知道编程与动画或插图有什么关系，但现在我很庆幸自己选了这门课。老师很好，他对编码显然充满热情并且知识丰富。多亏了他，我终于学会了一些编程知识(我自己用代码做了一个游戏)，并且我学会了如何学习代码，完全被突然的兴趣和好奇所吸引。

### 大开眼界

现如今，我意识到这门课是一个转折点，在有了这段经历之后，代码不再是一个未驯服的神秘野兽而变成了一个容易接近的东西，我认为这帮助我成为了一个更好的设计师。

有了这个新的兴趣，我设法找到了解决问题的办法，而这些问题是我过去无法解决的。一个很好的例子就是用最少的努力创建多分辨率资源的挑战。
在网上搜索之后，我设法找到并调整了一个我需要的脚本，只需一次点击即可创建所有资源。这是一个真正的节省时间的方法。幸运的是，现在我们的设计工具已经发展到可以提供这种功能的程度，但是几年前还做不到，知道如何解释和调整代码为我节省了大量时间和工作。

这只是少数几行代码在生活中所能创造的许多小改进的一个例子，但是我作为一个设计师最看重的东西是能够真正理解开发的限制和可能性。如果你没有基本的概念，你的设计很可能就是盲目的。

你会看到你正在设计的设备，就像某种魔术盒子，你可能很难与那些制造“魔术”的人交流。如果你什么都不知道，如果开发者只是告诉你某件事是不可能的，你就没办法做任何争论。

### 你应该会代码吗？

不管是不是设计师，我认为每个人都应该了解下代码知识。

我所考虑的是学习一些基础编程语言，以及一个网站如何从几行代码到最终展现一些可视化的相关知识。

让我们假设代码是纸牌魔术，当你教某人如何表演这个魔术，然后他可能就会意识到，魔术中看到的都是误导和技巧，并没有任何超自然的东西。

我个人认为这应该在学校的早期就应该引入，并且应该在数学、文学和科学方面进行教学。为什么?因为我们的大部分生活都依赖于代码驱动的东西。我个人的经验告诉我，简单的介绍有助于揭开整个事物的神秘面纱，让每个人都更容易接受编程。

现在，如果你正在设计软件或网站，那么我认为你至少要了解你在做什么，以便尽可能达到最好的结果。

想象一下，你正在做物料设计，你对印刷过程一无所知——如何准备文件，使用什么材料，或者你可以添加什么类型的装饰，你能成为一个合格的设计师吗?我不这么认为。

一个实用的例子是，当你需要提供一个开发团队将会转化为代码的样式规范时，真正了解你应该提供什么内容的惟一方法是理解你正在处理的内容。

![image2](/img/article-img/20180514/image2.png)

### 热情

即使我建议你对代码只需要点到为止，但这并不意味着你不能深入研究，事实上你可以随心所欲的学习。这只取决于你对什么感兴趣，以及你有多少时间。

我建议你坚定你的兴趣，我认为要做到更好，你的热情比什么都重要。只有你对某件事充满激情，你才会付诸实践，并能一直坚持下去，直到达到你的目标。

要想成为一名更好的设计师，根据我的经验，你可能需要去钻研很多学科，如果你对它充满热情，并且每次只做一个，那就去做吧。

> "我不害怕曾经练过一万种踢法的人，但我害怕一种踢法练过一万次的人。"
>  — 李小龙

这就是说，你需要专注于学习某种技能，否则将无法正确地使用它。

如果你是一名设计师，在你想深入学习代码时发现还是不感兴趣，这也没问题。还有很多其他更有用的技能可能你会喜欢，专注于那些。我认为每位设计师都需要有自己的定位，就像他们说的，每个锅都有一个属于它盖子。

现在你可能在想：“对于那些需要会代码的设计师的工作机会呢？”如果我不懂，我就可能会错过机会。“

我想说，你真的想要做一份你并不热衷的工作么？想想看，”设计师“这个职业其实也非常广泛，有很多类别，对于每个工作机会来说，他们所需要的设计师类别也是完全不一样的。他们有时会被视为完全不同的职业，你所担心的问题就好比是，会计师担心他的简历可能会找不到销售的工作，这完全没道理，不是吗？

我能给你的最好的建议是，了解你真正喜欢的东西，并全身心投入其中。练习，直到你觉得还不错，然后继续练习，如果你这样做了，那么你应该能够找到属于你的舞台。

### 总结

你应该对开发的工作需要有基本的了解吗？
肯定是的，每个人（我的意思是每个人）都应该。

你是否应该深入学习开发，对于仅仅身为设计师的你？
只要你对此有热情，那就去学吧！



> 原文：https://uxdesign.cc/to-code-or-not-code-18eba05d186e
>
> 作者：José Torre
>
> 译者：彩云Sky
>
> 本文翻译已获得作者的正式授权

![shouquan](/img/article-img/20180514/shouquan.png)